#!/usr/bin/python2.4
# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2



_CONTACT = descriptor.Descriptor(
  name='Contact',
  full_name='Contact',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='Contact.nid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ipv4', full_name='Contact.ipv4', index=1,
      number=2, type=13, cpp_type=3, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ipv6', full_name='Contact.ipv6', index=2,
      number=3, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='port', full_name='Contact.port', index=3,
      number=4, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_PINGREQUEST = descriptor.Descriptor(
  name='PingRequest',
  full_name='PingRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_PINGRESPONSE = descriptor.Descriptor(
  name='PingResponse',
  full_name='PingResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FINDNODEREQUEST = descriptor.Descriptor(
  name='FindNodeRequest',
  full_name='FindNodeRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='FindNodeRequest.nid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='service', full_name='FindNodeRequest.service', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FINDNODERESPONSE = descriptor.Descriptor(
  name='FindNodeResponse',
  full_name='FindNodeResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='contacts', full_name='FindNodeResponse.contacts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_QUERYSERVICESREQUEST = descriptor.Descriptor(
  name='QueryServicesRequest',
  full_name='QueryServicesRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='service', full_name='QueryServicesRequest.service', index=0,
      number=1, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_QUERYSERVICESRESPONSE = descriptor.Descriptor(
  name='QueryServicesResponse',
  full_name='QueryServicesResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='present', full_name='QueryServicesResponse.present', index=0,
      number=1, type=13, cpp_type=3, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_GETSERVICESREQUEST = descriptor.Descriptor(
  name='GetServicesRequest',
  full_name='GetServicesRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_GETSERVICESRESPONSE = descriptor.Descriptor(
  name='GetServicesResponse',
  full_name='GetServicesResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='services', full_name='GetServicesResponse.services', index=0,
      number=1, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FINDNODERESPONSE.fields_by_name['contacts'].message_type = _CONTACT

class Contact(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONTACT

class PingRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGREQUEST

class PingResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGRESPONSE

class FindNodeRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FINDNODEREQUEST

class FindNodeResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FINDNODERESPONSE

class QueryServicesRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _QUERYSERVICESREQUEST

class QueryServicesResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _QUERYSERVICESRESPONSE

class GetServicesRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETSERVICESREQUEST

class GetServicesResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETSERVICESRESPONSE


_BASESERVICE = descriptor.ServiceDescriptor(
  name='BaseService',
  full_name='BaseService',
  index=0,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='Ping',
    full_name='BaseService.Ping',
    index=0,
    containing_service=None,
    input_type=_PINGREQUEST,
    output_type=_PINGRESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='FindNode',
    full_name='BaseService.FindNode',
    index=1,
    containing_service=None,
    input_type=_FINDNODEREQUEST,
    output_type=_FINDNODERESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='QueryServices',
    full_name='BaseService.QueryServices',
    index=2,
    containing_service=None,
    input_type=_QUERYSERVICESREQUEST,
    output_type=_QUERYSERVICESRESPONSE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='GetServices',
    full_name='BaseService.GetServices',
    index=3,
    containing_service=None,
    input_type=_GETSERVICESREQUEST,
    output_type=_GETSERVICESRESPONSE,
    options=None,
  ),
])

class BaseService(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _BASESERVICE
class BaseService_Stub(BaseService):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _BASESERVICE

