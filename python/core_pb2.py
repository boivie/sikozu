#!/usr/bin/python2.4
# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2



_CONTACT = descriptor.Descriptor(
  name='Contact',
  full_name='Sikozu.Messages.Contact',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='Sikozu.Messages.Contact.nid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ipv4', full_name='Sikozu.Messages.Contact.ipv4', index=1,
      number=2, type=13, cpp_type=3, label=1,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ipv6', full_name='Sikozu.Messages.Contact.ipv6', index=2,
      number=3, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='port', full_name='Sikozu.Messages.Contact.port', index=3,
      number=4, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_PINGREQUEST = descriptor.Descriptor(
  name='PingRequest',
  full_name='Sikozu.Messages.PingRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_PINGRESPONSE = descriptor.Descriptor(
  name='PingResponse',
  full_name='Sikozu.Messages.PingResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_HELLOREQUEST = descriptor.Descriptor(
  name='HelloRequest',
  full_name='Sikozu.Messages.HelloRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='Sikozu.Messages.HelloRequest.nid', index=0,
      number=1, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_HELLORESPONSE = descriptor.Descriptor(
  name='HelloResponse',
  full_name='Sikozu.Messages.HelloResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='Sikozu.Messages.HelloResponse.nid', index=0,
      number=1, type=12, cpp_type=9, label=1,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FINDNODEREQUEST = descriptor.Descriptor(
  name='FindNodeRequest',
  full_name='Sikozu.Messages.FindNodeRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='Sikozu.Messages.FindNodeRequest.nid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='service', full_name='Sikozu.Messages.FindNodeRequest.service', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FINDNODERESPONSE = descriptor.Descriptor(
  name='FindNodeResponse',
  full_name='Sikozu.Messages.FindNodeResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='contacts', full_name='Sikozu.Messages.FindNodeResponse.contacts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_GETSERVICESREQUEST = descriptor.Descriptor(
  name='GetServicesRequest',
  full_name='Sikozu.Messages.GetServicesRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_GETSERVICESRESPONSE_RESULT = descriptor.Descriptor(
  name='Result',
  full_name='Sikozu.Messages.GetServicesResponse.Result',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='channel', full_name='Sikozu.Messages.GetServicesResponse.Result.channel', index=0,
      number=1, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='Sikozu.Messages.GetServicesResponse.Result.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)

_GETSERVICESRESPONSE = descriptor.Descriptor(
  name='GetServicesResponse',
  full_name='Sikozu.Messages.GetServicesResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='services', full_name='Sikozu.Messages.GetServicesResponse.services', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_GETCHANNELREQUEST = descriptor.Descriptor(
  name='GetChannelRequest',
  full_name='Sikozu.Messages.GetChannelRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='Sikozu.Messages.GetChannelRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_GETCHANNELRESPONSE = descriptor.Descriptor(
  name='GetChannelResponse',
  full_name='Sikozu.Messages.GetChannelResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='channel', full_name='Sikozu.Messages.GetChannelResponse.channel', index=0,
      number=1, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ANNOUNCESERVICEREQUEST = descriptor.Descriptor(
  name='AnnounceServiceRequest',
  full_name='Sikozu.Messages.AnnounceServiceRequest',
  filename='core.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='nid', full_name='Sikozu.Messages.AnnounceServiceRequest.nid', index=0,
      number=1, type=12, cpp_type=9, label=2,
      default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='service', full_name='Sikozu.Messages.AnnounceServiceRequest.service', index=1,
      number=2, type=9, cpp_type=9, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_ANNOUNCESERVICERESPONSE = descriptor.Descriptor(
  name='AnnounceServiceResponse',
  full_name='Sikozu.Messages.AnnounceServiceResponse',
  filename='core.proto',
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FINDNODERESPONSE.fields_by_name['contacts'].message_type = _CONTACT
_GETSERVICESRESPONSE.fields_by_name['services'].message_type = _GETSERVICESRESPONSE_RESULT

class Contact(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CONTACT

class PingRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGREQUEST

class PingResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGRESPONSE

class HelloRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HELLOREQUEST

class HelloResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _HELLORESPONSE

class FindNodeRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FINDNODEREQUEST

class FindNodeResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FINDNODERESPONSE

class GetServicesRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETSERVICESREQUEST

class GetServicesResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  
  class Result(message.Message):
    __metaclass__ = reflection.GeneratedProtocolMessageType
    DESCRIPTOR = _GETSERVICESRESPONSE_RESULT
  DESCRIPTOR = _GETSERVICESRESPONSE

class GetChannelRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETCHANNELREQUEST

class GetChannelResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _GETCHANNELRESPONSE

class AnnounceServiceRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ANNOUNCESERVICEREQUEST

class AnnounceServiceResponse(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ANNOUNCESERVICERESPONSE

